// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebService_Notification;

#nullable disable

namespace WebService_Notification.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230726195919_DatabaseCreation")]
    partial class DatabaseCreation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebService_Notification.Models.Amount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdPayment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentReference")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("PaymentReference");

                    b.ToTable("Amount");
                });

            modelBuilder.Entity("WebService_Notification.Models.AmountPayment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Factor")
                        .HasColumnType("int");

                    b.Property<int?>("FromId")
                        .HasColumnType("int");

                    b.Property<int>("IdFrom")
                        .HasColumnType("int");

                    b.Property<int>("IdTo")
                        .HasColumnType("int");

                    b.Property<int?>("ToId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FromId");

                    b.HasIndex("ToId");

                    b.ToTable("AmountPayment");
                });

            modelBuilder.Entity("WebService_Notification.Models.Field", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DisplayOn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdRequest")
                        .HasColumnType("int");

                    b.Property<string>("Keyword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RequestId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RequestId");

                    b.ToTable("Field");
                });

            modelBuilder.Entity("WebService_Notification.Models.FieldsPayment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DisplayOn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdPaymentItem")
                        .HasColumnType("int");

                    b.Property<string>("Keyword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PaymentItemId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PaymentItemId");

                    b.ToTable("FieldsPayment");
                });

            modelBuilder.Entity("WebService_Notification.Models.Notification", b =>
                {
                    b.Property<int>("RequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RequestId"));

                    b.Property<string>("Subscription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RequestId");

                    b.ToTable("Notification");
                });

            modelBuilder.Entity("WebService_Notification.Models.Payer", b =>
                {
                    b.Property<string>("Document")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DocumentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Document");

                    b.ToTable("Payer");
                });

            modelBuilder.Entity("WebService_Notification.Models.Payment", b =>
                {
                    b.Property<string>("Reference")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("AllowPartial")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdRequest")
                        .HasColumnType("int");

                    b.Property<int?>("RequestId")
                        .HasColumnType("int");

                    b.Property<bool>("Subscribe")
                        .HasColumnType("bit");

                    b.HasKey("Reference");

                    b.HasIndex("RequestId");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("WebService_Notification.Models.PaymentItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AmountId")
                        .HasColumnType("int");

                    b.Property<string>("Authorization")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Franchise")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdAmount")
                        .HasColumnType("int");

                    b.Property<int>("IdNotification")
                        .HasColumnType("int");

                    b.Property<int>("InternalReference")
                        .HasColumnType("int");

                    b.Property<string>("IssuerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NotificationRequestId")
                        .HasColumnType("int");

                    b.Property<string>("PaymentMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentMethodName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Receipt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Refunded")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AmountId");

                    b.HasIndex("NotificationRequestId");

                    b.ToTable("PaymentItem");
                });

            modelBuilder.Entity("WebService_Notification.Models.Request", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Expiration")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdNotification")
                        .HasColumnType("int");

                    b.Property<string>("IdPayer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Locale")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NotificationRequestId")
                        .HasColumnType("int");

                    b.Property<string>("PayerDocument")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserAgent")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NotificationRequestId");

                    b.HasIndex("PayerDocument");

                    b.ToTable("Request");
                });

            modelBuilder.Entity("WebService_Notification.Models.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdNotification")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NotificationRequestId")
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NotificationRequestId");

                    b.ToTable("Status");
                });

            modelBuilder.Entity("WebService_Notification.Models.StatusPayment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdNotification")
                        .HasColumnType("int");

                    b.Property<int>("IdPaymentItem")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NotificationRequestId")
                        .HasColumnType("int");

                    b.Property<int?>("PaymentItemId")
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NotificationRequestId");

                    b.HasIndex("PaymentItemId");

                    b.ToTable("StatusPayment");
                });

            modelBuilder.Entity("WebService_Notification.Models.Amount", b =>
                {
                    b.HasOne("WebService_Notification.Models.Payment", "Payment")
                        .WithMany("Amount")
                        .HasForeignKey("PaymentReference");

                    b.Navigation("Payment");
                });

            modelBuilder.Entity("WebService_Notification.Models.AmountPayment", b =>
                {
                    b.HasOne("WebService_Notification.Models.Amount", "From")
                        .WithMany()
                        .HasForeignKey("FromId");

                    b.HasOne("WebService_Notification.Models.Amount", "To")
                        .WithMany()
                        .HasForeignKey("ToId");

                    b.Navigation("From");

                    b.Navigation("To");
                });

            modelBuilder.Entity("WebService_Notification.Models.Field", b =>
                {
                    b.HasOne("WebService_Notification.Models.Request", "Request")
                        .WithMany("Fields")
                        .HasForeignKey("RequestId");

                    b.Navigation("Request");
                });

            modelBuilder.Entity("WebService_Notification.Models.FieldsPayment", b =>
                {
                    b.HasOne("WebService_Notification.Models.PaymentItem", "PaymentItem")
                        .WithMany("ProcessorFields")
                        .HasForeignKey("PaymentItemId");

                    b.Navigation("PaymentItem");
                });

            modelBuilder.Entity("WebService_Notification.Models.Payment", b =>
                {
                    b.HasOne("WebService_Notification.Models.Request", "Request")
                        .WithMany("Payment")
                        .HasForeignKey("RequestId");

                    b.Navigation("Request");
                });

            modelBuilder.Entity("WebService_Notification.Models.PaymentItem", b =>
                {
                    b.HasOne("WebService_Notification.Models.AmountPayment", "Amount")
                        .WithMany()
                        .HasForeignKey("AmountId");

                    b.HasOne("WebService_Notification.Models.Notification", "Notification")
                        .WithMany("Payment")
                        .HasForeignKey("NotificationRequestId");

                    b.Navigation("Amount");

                    b.Navigation("Notification");
                });

            modelBuilder.Entity("WebService_Notification.Models.Request", b =>
                {
                    b.HasOne("WebService_Notification.Models.Notification", "Notification")
                        .WithMany("Request")
                        .HasForeignKey("NotificationRequestId");

                    b.HasOne("WebService_Notification.Models.Payer", "Payer")
                        .WithMany("Requests")
                        .HasForeignKey("PayerDocument");

                    b.Navigation("Notification");

                    b.Navigation("Payer");
                });

            modelBuilder.Entity("WebService_Notification.Models.Status", b =>
                {
                    b.HasOne("WebService_Notification.Models.Notification", "Notification")
                        .WithMany("Status")
                        .HasForeignKey("NotificationRequestId");

                    b.Navigation("Notification");
                });

            modelBuilder.Entity("WebService_Notification.Models.StatusPayment", b =>
                {
                    b.HasOne("WebService_Notification.Models.Notification", "Notification")
                        .WithMany()
                        .HasForeignKey("NotificationRequestId");

                    b.HasOne("WebService_Notification.Models.PaymentItem", "PaymentItem")
                        .WithMany("Status")
                        .HasForeignKey("PaymentItemId");

                    b.Navigation("Notification");

                    b.Navigation("PaymentItem");
                });

            modelBuilder.Entity("WebService_Notification.Models.Notification", b =>
                {
                    b.Navigation("Payment");

                    b.Navigation("Request");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("WebService_Notification.Models.Payer", b =>
                {
                    b.Navigation("Requests");
                });

            modelBuilder.Entity("WebService_Notification.Models.Payment", b =>
                {
                    b.Navigation("Amount");
                });

            modelBuilder.Entity("WebService_Notification.Models.PaymentItem", b =>
                {
                    b.Navigation("ProcessorFields");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("WebService_Notification.Models.Request", b =>
                {
                    b.Navigation("Fields");

                    b.Navigation("Payment");
                });
#pragma warning restore 612, 618
        }
    }
}
